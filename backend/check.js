const snarkjs = require("snarkjs");
const fs = require("fs");

// Load verification key
const vkey = JSON.parse(fs.readFileSync("verification_key.json"));

// Your proof and public signals (same as backend output)
const proof = { 
    pi_a: [
        "17157523029273023215382967207295069243428763283811899867255223367902011244802",
        "12963202847548514854973032657401941971917050561267056383531495874068499363475"
      ],
      pi_b: [
        [
          "12971125390966647363337900511962148092580667170036821197071781000337290169169",
          "10669998883472405876677622721379479992607368180411864275966509161455762981923"
        ],
        [
          "10743830728843633217393412508715446437511375190994682955092045340928008234294",
          "4628426672670190279796784071506115746771818224865469222918632232390992015898"
        ]
      ],
      pi_c: [
        "16659039918952405003601376640875718412368485942654316048615436875854845325915",
        "7829711277400047304215757170711112051038865990034140967605857703470893796681"
      ]
};

const publicSignals = ["0"];

(async () => {
    const isValid = await snarkjs.groth16.verify(vkey, publicSignals, proof);
    console.log("✅ Local Proof Verification:", isValid ? "Success! 🎉" : "❌ Invalid Proof!");
})();
